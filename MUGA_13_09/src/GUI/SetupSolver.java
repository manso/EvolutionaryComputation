/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import genetic.Solver.SimpleSolver;
import utils.SolverContainer;
import genetic.population.MultiPopulation;
import genetic.population.Population;
import genetic.population.SimplePopulation;
import genetic.population.UniquePopulation;
import genetic.stopCriteria.StopCriteria;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import operator.mutation.Mutation;
import operator.recombination.Recombination;
import operator.reparation.Reparation;
import operator.replacement.Replacement;
import operator.rescaling.Rescaling;
import operator.selection.Selection;
import problem.Individual;
import statistics.SolverStatistic;
import utils.DynamicLoad;
import utils.MuGA_JarFile;

/**
 *
 * @author ZULU
 */
public class SetupSolver extends javax.swing.JFrame {

    SimpleSolver solver;
    SimpleSolver solverOlder;
    SolverContainer FRM;

    /**
     * Creates new form SetupSolver
     */
    public SetupSolver() {
        this(new SolverContainer());
    }

    public SetupSolver(SolverContainer frm) {


        //----- container of folder ----------
        this.FRM = frm;
        solver = FRM.solver;
        solverOlder = solver.getClone();
        //---------------------------
        initComponents();

        MuGA_JarFile.putElementsToList("problem", "", cbProblem, solver.getTemplate().getClass().getSimpleName());
        MuGA_JarFile.putElementsToList("operator.selection", "", cbSelection, solver.getSelect().getClass().getSimpleName());
        MuGA_JarFile.putElementsToList("operator.recombination", "", cbRecombination, solver.getRecombine().getClass().getSimpleName());
        MuGA_JarFile.putElementsToList("operator.mutation", "", cbMutation, solver.getMutate().getClass().getSimpleName());
        MuGA_JarFile.putElementsToList("operator.replacement", "", cbReplacement, solver.getReplace().getClass().getSimpleName());
        MuGA_JarFile.putElementsToList("operator.reparation", "", cbReparation, solver.getReparation().getClass().getSimpleName());
        MuGA_JarFile.putElementsToList("operator.rescaling", "", cbRescaling, solver.getRescaling().getClass().getSimpleName());
        MuGA_JarFile.putElementsToList("genetic.stopCriteria", "", cbStopCriteria, solver.getStop().getClass().getSimpleName());
        MuGA_JarFile.putElementsToList("genetic.Solver", "", cbSolverType, solver.getClass().getSimpleName());
        MuGA_JarFile.loadJarStatistics(pnStatisticsSelections);

        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((dim.width - this.getWidth()) / 2, (dim.height - this.getHeight()) / 2, this.getWidth(), this.getHeight());
        updateSolverInfo();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rgPopType = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnSetupSolver = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        cbStopCriteria = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtStopCriteriaInfo = new javax.swing.JTextArea();
        txtStopCriteriaParams = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        cbSolverType = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        txtSolverName = new javax.swing.JTextField();
        txtSolverParameters = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtSolverInfo = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        txtPopSize = new javax.swing.JTextField();
        rbSimplePop = new javax.swing.JRadioButton();
        rbUniquePop = new javax.swing.JRadioButton();
        rbMultiPop = new javax.swing.JRadioButton();
        pnSetupOperators = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtInfo = new javax.swing.JTextArea();
        txtParameters = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        lblProblem = new javax.swing.JLabel();
        cbProblem = new javax.swing.JComboBox();
        lblSelection = new javax.swing.JLabel();
        cbSelection = new javax.swing.JComboBox();
        lblRecombination = new javax.swing.JLabel();
        cbRecombination = new javax.swing.JComboBox();
        lblMutation = new javax.swing.JLabel();
        cbMutation = new javax.swing.JComboBox();
        lblReparation = new javax.swing.JLabel();
        cbReparation = new javax.swing.JComboBox();
        lblReplacement = new javax.swing.JLabel();
        cbReplacement = new javax.swing.JComboBox();
        lblRescaling = new javax.swing.JLabel();
        cbRescaling = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        pnStats = new javax.swing.JPanel();
        pnStatisticsSelections = new javax.swing.JPanel();
        pnInformation = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtSolverInformation = new javax.swing.JTextArea();
        btAcceptSolver4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Setup Solver");
        setBackground(new java.awt.Color(0, 204, 204));
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                formWindowLostFocus(evt);
            }
        });

        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.setToolTipText("");
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        pnSetupSolver.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnSetupSolver.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pnSetupSolverFocusGained(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel11.setText("Stop Criteria");

        cbStopCriteria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbStopCriteria.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbStopCriteriaItemStateChanged(evt);
            }
        });
        cbStopCriteria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbStopCriteriaActionPerformed(evt);
            }
        });

        txtStopCriteriaInfo.setColumns(20);
        txtStopCriteriaInfo.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        txtStopCriteriaInfo.setRows(5);
        jScrollPane3.setViewportView(txtStopCriteriaInfo);

        txtStopCriteriaParams.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStopCriteriaParamsActionPerformed(evt);
            }
        });
        txtStopCriteriaParams.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtStopCriteriaParamsFocusLost(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel12.setText("Parameters");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbStopCriteria, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(98, Short.MAX_VALUE))
            .addComponent(jScrollPane3)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtStopCriteriaParams, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(cbStopCriteria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStopCriteriaParams, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel9.setText("Solver Type");

        cbSolverType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbSolverType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbSolverTypeItemStateChanged(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel10.setText("Solver Name");

        txtSolverName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSolverNameActionPerformed(evt);
            }
        });
        txtSolverName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSolverNameFocusLost(evt);
            }
        });

        txtSolverParameters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSolverParametersActionPerformed(evt);
            }
        });
        txtSolverParameters.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSolverParametersFocusLost(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel14.setText("Parameters");

        txtSolverInfo.setColumns(20);
        txtSolverInfo.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        txtSolverInfo.setRows(5);
        jScrollPane4.setViewportView(txtSolverInfo);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbSolverType, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSolverParameters, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                            .addComponent(txtSolverName))))
                .addContainerGap(133, Short.MAX_VALUE))
            .addComponent(jScrollPane4)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cbSolverType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSolverParameters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtSolverName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel15.setText("Population");

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel8.setLayout(new java.awt.GridLayout(2, 2, 2, 2));

        jPanel9.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel9.setLayout(new java.awt.GridLayout(1, 0));

        jLabel16.setText("Pop. Size");
        jPanel9.add(jLabel16);

        txtPopSize.setText("32");
        txtPopSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPopSizeActionPerformed(evt);
            }
        });
        jPanel9.add(txtPopSize);

        jPanel8.add(jPanel9);

        rgPopType.add(rbSimplePop);
        rbSimplePop.setText("Simple Population");
        jPanel8.add(rbSimplePop);

        rgPopType.add(rbUniquePop);
        rbUniquePop.setText("Unique Population");
        jPanel8.add(rbUniquePop);

        rgPopType.add(rbMultiPop);
        rbMultiPop.setSelected(true);
        rbMultiPop.setText("Multi Population");
        jPanel8.add(rbMultiPop);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel15)
                .addContainerGap())
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnSetupSolverLayout = new javax.swing.GroupLayout(pnSetupSolver);
        pnSetupSolver.setLayout(pnSetupSolverLayout);
        pnSetupSolverLayout.setHorizontalGroup(
            pnSetupSolverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnSetupSolverLayout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnSetupSolverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        pnSetupSolverLayout.setVerticalGroup(
            pnSetupSolverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnSetupSolverLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(pnSetupSolverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnSetupSolverLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jTabbedPane1.addTab("Setup Solver", new javax.swing.ImageIcon(getClass().getResource("/GUI/icons/Dna_24x24.png")), pnSetupSolver, ""); // NOI18N

        pnSetupOperators.setBackground(new java.awt.Color(160, 160, 160));
        pnSetupOperators.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtInfo.setColumns(20);
        txtInfo.setEditable(false);
        txtInfo.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        txtInfo.setRows(5);
        jScrollPane1.setViewportView(txtInfo);

        txtParameters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtParametersActionPerformed(evt);
            }
        });
        txtParameters.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtParametersFocusLost(evt);
            }
        });

        jPanel5.setLayout(new java.awt.GridLayout(14, 1));

        lblProblem.setText("Problem");
        lblProblem.setOpaque(true);
        lblProblem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblProblemMouseClicked(evt);
            }
        });
        lblProblem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                lblProblemFocusGained(evt);
            }
        });
        jPanel5.add(lblProblem);

        cbProblem.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbProblem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbProblemItemStateChanged(evt);
            }
        });
        cbProblem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cbProblemFocusGained(evt);
            }
        });
        jPanel5.add(cbProblem);

        lblSelection.setText("Selection Operator");
        lblSelection.setOpaque(true);
        lblSelection.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblSelectionMouseClicked(evt);
            }
        });
        jPanel5.add(lblSelection);

        cbSelection.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbSelection.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbSelectionItemStateChanged(evt);
            }
        });
        cbSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSelectionActionPerformed(evt);
            }
        });
        cbSelection.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cbSelectionFocusGained(evt);
            }
        });
        jPanel5.add(cbSelection);

        lblRecombination.setText("Recombination Operator");
        lblRecombination.setOpaque(true);
        lblRecombination.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRecombinationMouseClicked(evt);
            }
        });
        jPanel5.add(lblRecombination);

        cbRecombination.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbRecombination.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbRecombinationItemStateChanged(evt);
            }
        });
        cbRecombination.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cbRecombinationFocusGained(evt);
            }
        });
        jPanel5.add(cbRecombination);

        lblMutation.setText("Mutation Operator");
        lblMutation.setOpaque(true);
        lblMutation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMutationMouseClicked(evt);
            }
        });
        jPanel5.add(lblMutation);

        cbMutation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbMutation.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbMutationItemStateChanged(evt);
            }
        });
        cbMutation.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cbMutationFocusGained(evt);
            }
        });
        jPanel5.add(cbMutation);

        lblReparation.setText("Reparation Operator");
        lblReparation.setOpaque(true);
        lblReparation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblReparationMouseClicked(evt);
            }
        });
        jPanel5.add(lblReparation);

        cbReparation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbReparation.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbReparationItemStateChanged(evt);
            }
        });
        cbReparation.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cbReparationFocusGained(evt);
            }
        });
        jPanel5.add(cbReparation);

        lblReplacement.setText("Replacement Operator");
        lblReplacement.setOpaque(true);
        lblReplacement.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblReplacementMouseClicked(evt);
            }
        });
        jPanel5.add(lblReplacement);

        cbReplacement.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbReplacement.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbReplacementItemStateChanged(evt);
            }
        });
        cbReplacement.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cbReplacementFocusGained(evt);
            }
        });
        jPanel5.add(cbReplacement);

        lblRescaling.setText("Rescaling Operator");
        lblRescaling.setOpaque(true);
        lblRescaling.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRescalingMouseClicked(evt);
            }
        });
        jPanel5.add(lblRescaling);

        cbRescaling.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbRescaling.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbRescalingItemStateChanged(evt);
            }
        });
        cbRescaling.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cbRescalingFocusGained(evt);
            }
        });
        jPanel5.add(cbRescaling);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel13.setText("Parameters");

        javax.swing.GroupLayout pnSetupOperatorsLayout = new javax.swing.GroupLayout(pnSetupOperators);
        pnSetupOperators.setLayout(pnSetupOperatorsLayout);
        pnSetupOperatorsLayout.setHorizontalGroup(
            pnSetupOperatorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnSetupOperatorsLayout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnSetupOperatorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnSetupOperatorsLayout.createSequentialGroup()
                        .addGap(0, 3, Short.MAX_VALUE)
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(txtParameters, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        pnSetupOperatorsLayout.setVerticalGroup(
            pnSetupOperatorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnSetupOperatorsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnSetupOperatorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtParameters, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(13, 13, Short.MAX_VALUE))
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Setup evolution", new javax.swing.ImageIcon(getClass().getResource("/GUI/icons/Evolution_24.png")), pnSetupOperators); // NOI18N

        pnStatisticsSelections.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnStatisticsSelections.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnStatisticsSelectionsMouseClicked(evt);
            }
        });
        pnStatisticsSelections.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                pnStatisticsSelectionsFocusLost(evt);
            }
        });
        pnStatisticsSelections.setLayout(new java.awt.GridLayout(10, 3, 3, 3));

        javax.swing.GroupLayout pnStatsLayout = new javax.swing.GroupLayout(pnStats);
        pnStats.setLayout(pnStatsLayout);
        pnStatsLayout.setHorizontalGroup(
            pnStatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnStatisticsSelections, javax.swing.GroupLayout.DEFAULT_SIZE, 921, Short.MAX_VALUE)
        );
        pnStatsLayout.setVerticalGroup(
            pnStatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnStatisticsSelections, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Setup Statistics", new javax.swing.ImageIcon(getClass().getResource("/GUI/icons/Graphics_24.png")), pnStats); // NOI18N

        txtSolverInformation.setColumns(20);
        txtSolverInformation.setEditable(false);
        txtSolverInformation.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        txtSolverInformation.setRows(5);
        jScrollPane2.setViewportView(txtSolverInformation);

        javax.swing.GroupLayout pnInformationLayout = new javax.swing.GroupLayout(pnInformation);
        pnInformation.setLayout(pnInformationLayout);
        pnInformationLayout.setHorizontalGroup(
            pnInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 921, Short.MAX_VALUE)
        );
        pnInformationLayout.setVerticalGroup(
            pnInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Solver Information", new javax.swing.ImageIcon(getClass().getResource("/GUI/icons/info_small-icon.png")), pnInformation); // NOI18N

        btAcceptSolver4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/icons/Acept_64.png"))); // NOI18N
        btAcceptSolver4.setText("Accept Solver");
        btAcceptSolver4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAcceptSolver4ActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/icons/Exit_64.png"))); // NOI18N
        jButton1.setText("Discard Solver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btAcceptSolver4, javax.swing.GroupLayout.PREFERRED_SIZE, 678, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAcceptSolver4, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbSolverTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbSolverTypeItemStateChanged

        txtSolverInfo.setText("genetic.Solver." + cbSolverType.getSelectedItem().toString());
        SimpleSolver template = (SimpleSolver) DynamicLoad.makeObject(txtSolverInfo.getText());
        if (template.getClass() != solver.getClass()) {
            //set operators and populations to new solver
            template.setAll(FRM.solver);
            template.title = template.getClass().getSimpleName();
            //---------solver container ------
            FRM.solver = template;
            solver = FRM.solver;
            //-----------------------
        }
        txtSolverInfo.setText(solver.getAlgorithm());
        txtSolverParameters.setText(solver.getParameters());
        txtSolverName.setText(solver.title);
    }//GEN-LAST:event_cbSolverTypeItemStateChanged

    private void pnSetupSolverFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pnSetupSolverFocusGained
    }//GEN-LAST:event_pnSetupSolverFocusGained

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
//        btSetParametsEvolutionActionPerformed(null);
//        btSetParametsSolverActionPerformed(null);
        updateSolverInfo();
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void cbStopCriteriaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbStopCriteriaItemStateChanged
    }//GEN-LAST:event_cbStopCriteriaItemStateChanged

    private void txtPopSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPopSizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPopSizeActionPerformed

    private void btAcceptSolver4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAcceptSolver4ActionPerformed
        //update solver
        updateSolverParameters(evt);

        
        FRM.mainForm.setVisible(true);
        FRM.mainForm.requestFocus();
        this.dispose();
    }//GEN-LAST:event_btAcceptSolver4ActionPerformed

    private void formWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowLostFocus
        this.requestFocus();
    }//GEN-LAST:event_formWindowLostFocus

    private void cbRescalingFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbRescalingFocusGained
        updateLabelColors(lblRescaling);
        txtInfo.setText("operator.rescaling." + cbRescaling.getSelectedItem().toString());
        txtInfo.append("\n" + solver.getRescaling().getInformation());
        txtInfo.setCaretPosition(0);
        txtParameters.setText(solver.getRescaling().getParameters());
    }//GEN-LAST:event_cbRescalingFocusGained

    private void cbRescalingItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbRescalingItemStateChanged
        txtInfo.setText("operator.rescaling." + cbRescaling.getSelectedItem().toString());
        Rescaling template = (Rescaling) DynamicLoad.makeObject(txtInfo.getText());
        if (template.getClass() != solver.getRescaling().getClass()) {
            solver.setRescaling(template);
        }
        cbRescalingFocusGained(null);
    }//GEN-LAST:event_cbRescalingItemStateChanged

    private void cbReplacementFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbReplacementFocusGained
        updateLabelColors(lblReplacement);
        txtInfo.setText("operator.replacement." + cbReplacement.getSelectedItem().toString());
        txtInfo.append("\n" + solver.getReplace().getInformation());
        txtInfo.setCaretPosition(0);
        txtParameters.setText(solver.getReplace().getParameters());
    }//GEN-LAST:event_cbReplacementFocusGained

    private void cbReplacementItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbReplacementItemStateChanged
        txtInfo.setText("operator.replacement." + cbReplacement.getSelectedItem().toString());
        Replacement template = (Replacement) DynamicLoad.makeObject(txtInfo.getText());
        if (template.getClass() != solver.getReplace().getClass()) {
            solver.setReplace(template);
        }
        cbReplacementFocusGained(null);
    }//GEN-LAST:event_cbReplacementItemStateChanged

    private void cbReparationFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbReparationFocusGained
        updateLabelColors(lblReparation);
        txtInfo.setText("operator.reparation." + cbReparation.getSelectedItem().toString());
        txtInfo.append("\n" + solver.getReparation().getInformation());
        txtInfo.setCaretPosition(0);
        txtParameters.setText(solver.getReparation().getParameters());
    }//GEN-LAST:event_cbReparationFocusGained

    private void cbReparationItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbReparationItemStateChanged
        txtInfo.setText("operator.reparation." + cbReparation.getSelectedItem().toString());
        Reparation template = (Reparation) DynamicLoad.makeObject(txtInfo.getText());
        if (template.getClass() != solver.getReparation().getClass()) {
            solver.setReparation(template);
        }
        cbReparationFocusGained(null);
    }//GEN-LAST:event_cbReparationItemStateChanged

    private void cbMutationFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbMutationFocusGained
        updateLabelColors(lblMutation);
        txtInfo.setText("operator.mutation." + cbMutation.getSelectedItem().toString());
        txtInfo.append("\n" + solver.getMutate().getInformation());
        txtInfo.setCaretPosition(0);
        txtParameters.setText(solver.getMutate().getParameters());
    }//GEN-LAST:event_cbMutationFocusGained

    private void cbMutationItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbMutationItemStateChanged
        txtInfo.setText("operator.mutation." + cbMutation.getSelectedItem().toString());
        Mutation template = (Mutation) DynamicLoad.makeObject(txtInfo.getText());
        if (template.getClass() != solver.getMutate().getClass()) {
            solver.setMutate(template);
        }
        cbMutationFocusGained(null);
    }//GEN-LAST:event_cbMutationItemStateChanged

    private void cbRecombinationFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbRecombinationFocusGained
        updateLabelColors(lblRecombination);
        txtInfo.setText("operator.recombination." + cbRecombination.getSelectedItem().toString());
        txtInfo.append("\n" + solver.getRecombine().getInformation());
        txtInfo.setCaretPosition(0);
        txtParameters.setText(solver.getRecombine().getParameters());
    }//GEN-LAST:event_cbRecombinationFocusGained

    private void cbRecombinationItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbRecombinationItemStateChanged
        txtInfo.setText("operator.recombination." + cbRecombination.getSelectedItem().toString());
        Recombination template = (Recombination) DynamicLoad.makeObject(txtInfo.getText());
        if (template.getClass() != solver.getRecombine().getClass()) {
            solver.setRecombine(template);
        }
        cbRecombinationFocusGained(null);
    }//GEN-LAST:event_cbRecombinationItemStateChanged

    private void cbSelectionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbSelectionFocusGained
        updateLabelColors(lblSelection);
        txtInfo.setText("operator.selection." + cbSelection.getSelectedItem().toString());
        txtInfo.append("\n" + solver.getSelect().getInformation());
        txtInfo.setCaretPosition(0);
        txtParameters.setText(solver.getSelect().getParameters());
    }//GEN-LAST:event_cbSelectionFocusGained

    private void cbSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSelectionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbSelectionActionPerformed

    private void cbSelectionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbSelectionItemStateChanged
        txtInfo.setText("operator.selection." + cbSelection.getSelectedItem().toString());
        Selection template = (Selection) DynamicLoad.makeObject(txtInfo.getText());
        if (template.getClass() != solver.getSelect().getClass()) {
            solver.setSelect(template);
        }
        cbSelectionFocusGained(null);
    }//GEN-LAST:event_cbSelectionItemStateChanged

    private void cbProblemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbProblemFocusGained
        updateLabelColors(lblProblem);
        txtInfo.setText("problem." + cbProblem.getSelectedItem().toString());
//        txtInfo.setText("Problem Name : " + solver.getTemplate().getInfo());
        txtInfo.append("\n\n" + solver.getTemplate().getGenomeInformation());
        txtInfo.setCaretPosition(0);
        txtParameters.setText(solver.getTemplate().getParameters());
    }//GEN-LAST:event_cbProblemFocusGained

    private void cbProblemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbProblemItemStateChanged
        String problem = "problem." + cbProblem.getSelectedItem().toString();
        Individual template = (Individual) DynamicLoad.makeObject(problem);
        if (template.getClass() != solver.getTemplate().getClass()) {
            solver.setTemplate(template);
        }
        cbProblemFocusGained(null);
    }//GEN-LAST:event_cbProblemItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        FRM.solver = solverOlder;
        FRM.mainForm.setVisible(true);
        FRM.mainForm.requestFocus();
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtSolverNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSolverNameFocusLost
        solver.setTitle(txtSolverName.getText());
        updateSolverInfo();

    }//GEN-LAST:event_txtSolverNameFocusLost

    private void txtSolverParametersFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSolverParametersFocusLost
        solver.setParameters(txtSolverParameters.getText());
        updateSolverInfo();
    }//GEN-LAST:event_txtSolverParametersFocusLost

    private void cbStopCriteriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbStopCriteriaActionPerformed
        txtStopCriteriaInfo.setText("genetic.stopCriteria." + cbStopCriteria.getSelectedItem().toString());
        StopCriteria template = (StopCriteria) DynamicLoad.makeObject(txtStopCriteriaInfo.getText());
        if (template.getClass() != solver.getStop().getClass()) {
            solver.setStop(template);
        }
        solver.getStop().setParameters(txtStopCriteriaParams.getText());
        updateSolverInfo();
    }//GEN-LAST:event_cbStopCriteriaActionPerformed

    private void txtStopCriteriaParamsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtStopCriteriaParamsFocusLost
        solver.getStop().setParameters(txtStopCriteriaParams.getText());
        updateSolverInfo();
    }//GEN-LAST:event_txtStopCriteriaParamsFocusLost

    private void txtParametersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtParametersActionPerformed
        btSetParametsEvolutionActionPerformed(evt);
    }//GEN-LAST:event_txtParametersActionPerformed

    private void lblProblemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lblProblemFocusGained
    }//GEN-LAST:event_lblProblemFocusGained

    private void lblProblemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblProblemMouseClicked
        cbProblemFocusGained(null);
    }//GEN-LAST:event_lblProblemMouseClicked

    private void lblSelectionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSelectionMouseClicked
        cbSelectionFocusGained(null);
    }//GEN-LAST:event_lblSelectionMouseClicked

    private void lblRecombinationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRecombinationMouseClicked
        cbRecombinationFocusGained(null);
    }//GEN-LAST:event_lblRecombinationMouseClicked

    private void lblMutationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMutationMouseClicked
        cbMutationFocusGained(null);
    }//GEN-LAST:event_lblMutationMouseClicked

    private void lblReparationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblReparationMouseClicked
        cbReparationFocusGained(null);
    }//GEN-LAST:event_lblReparationMouseClicked

    private void lblReplacementMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblReplacementMouseClicked
        cbReplacementFocusGained(null);
    }//GEN-LAST:event_lblReplacementMouseClicked

    private void lblRescalingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRescalingMouseClicked
        cbRescalingFocusGained(null);
    }//GEN-LAST:event_lblRescalingMouseClicked

    private void pnStatisticsSelectionsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pnStatisticsSelectionsFocusLost
    }//GEN-LAST:event_pnStatisticsSelectionsFocusLost

    private void pnStatisticsSelectionsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnStatisticsSelectionsMouseClicked
    }//GEN-LAST:event_pnStatisticsSelectionsMouseClicked

    private void txtSolverNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSolverNameActionPerformed
        txtSolverNameFocusLost(null);
    }//GEN-LAST:event_txtSolverNameActionPerformed

    private void txtSolverParametersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSolverParametersActionPerformed
        txtSolverParametersFocusLost(null);
    }//GEN-LAST:event_txtSolverParametersActionPerformed

    private void txtStopCriteriaParamsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStopCriteriaParamsActionPerformed
       txtStopCriteriaParamsFocusLost(null);
    }//GEN-LAST:event_txtStopCriteriaParamsActionPerformed

    private void txtParametersFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtParametersFocusLost
        txtParametersActionPerformed(null);
    }//GEN-LAST:event_txtParametersFocusLost

    private void updateLabelColors(JLabel label) {
        label.setForeground(Color.BLUE);
        Color sel = new Color(160, 160, 160);
        Color notSel = new Color(240, 240, 240);
        label.setBackground(sel);
        if (lblProblem != label) {
            lblProblem.setBackground(notSel);
            lblProblem.setForeground(Color.BLACK);
        }
        if (lblMutation != label) {
            lblMutation.setBackground(notSel);
            lblMutation.setForeground(Color.BLACK);
        }
        if (lblRecombination != label) {
            lblRecombination.setBackground(notSel);
            lblRecombination.setForeground(Color.BLACK);
        }
        if (lblReparation != label) {
            lblReparation.setBackground(notSel);
            lblReparation.setForeground(Color.BLACK);
        }
        if (lblReplacement != label) {
            lblReplacement.setBackground(notSel);
            lblReplacement.setForeground(Color.BLACK);
        }
        if (lblRescaling != label) {
            lblRescaling.setBackground(notSel);
            lblRescaling.setForeground(Color.BLACK);
        }
        if (lblSelection != label) {
            lblSelection.setBackground(notSel);
            lblSelection.setForeground(Color.BLACK);
        }
    }

    public void updateSolverInfo() {
        txtStopCriteriaInfo.setText(solver.getStop().getInformation());
        txtStopCriteriaParams.setText(solver.getStop().getParameters());
        txtSolverInformation.setText(solver.getInfo());
        txtSolverName.setText(solver.getTitle());
        txtPopSize.setText(solver.getParents().size() + "");
        //------------------------------------------------
        if (solver.getParents() instanceof UniquePopulation) {
            rbUniquePop.setSelected(true);
        } else if (solver.getParents() instanceof MultiPopulation) {
            rbMultiPop.setSelected(true);
        } else {
            rbSimplePop.setSelected(true);
        }
        txtSolverParameters.setText(solver.getParameters());
        txtSolverInfo.setText("Solver Name:" + solver.getTitle()
                + "\n" + solver.getAlgorithm());
        txtSolverParameters.setText(solver.getParameters());
        txtSolverName.setText(solver.title);
    }

    private void updateSolverParameters(java.awt.event.ActionEvent evt) {
        solver.setTitle(txtSolverName.getText());
        solver.setParameters(txtSolverParameters.getText());
        solver.getStop().setParameters(txtStopCriteriaParams.getText());

        //------------------------------------------------
        int size = Integer.parseInt(txtPopSize.getText());
        Population pop;
        if (rbMultiPop.isSelected()) {
            pop = new MultiPopulation();

        } else if (rbUniquePop.isSelected()) {
            pop = new UniquePopulation();
        } else {
            pop = new SimplePopulation();
        }
        pop.createRandomPopulation(size, solver.getTemplate());
        solver.setPopulation(pop);
        solver.setStats(new SolverStatistic(solver.title));
        solver.updateSolverStats();
        //----------------------------------------------------
        //Statistics
        //----------------------------------------------------
        updateSolverInfo();
        SolverStatistic.model.clear();
        for (int i = 0; i < pnStatisticsSelections.getComponentCount(); i++) {
            JCheckBox cb = (JCheckBox) pnStatisticsSelections.getComponent(i);
            if (cb.isSelected()) {
                SolverStatistic.model.add(cb.getText());
            }
        }
    }

    private void btSetParametsEvolutionActionPerformed(java.awt.event.ActionEvent evt) {
        if (txtInfo.getText().startsWith("problem.")) {
            solver.getTemplate().setParameters(txtParameters.getText());
            cbProblemItemStateChanged(null);
        } else if (txtInfo.getText().startsWith("operator.selection.")) {
            solver.getSelect().setParameters(txtParameters.getText());
            txtInfo.setText("operator.selection." + cbSelection.getSelectedItem().toString());
            txtInfo.append("\n" + solver.getSelect().getInformation());
        } else if (txtInfo.getText().startsWith("operator.recombination.")) {
            solver.getRecombine().setParameters(txtParameters.getText());
            cbRecombinationFocusGained(null);
        } else if (txtInfo.getText().startsWith("operator.mutation.")) {
            solver.getMutate().setParameters(txtParameters.getText());
            cbMutationFocusGained(null);
        } else if (txtInfo.getText().startsWith("operator.reparation.")) {
            solver.getReparation().setParameters(txtParameters.getText());
            cbReparationFocusGained(null);
        } else if (txtInfo.getText().startsWith("operator.replacement.")) {
            solver.getReplace().setParameters(txtParameters.getText());
            cbReplacementFocusGained(null);
        } else if (txtInfo.getText().startsWith("operator.rescaling.")) {
            solver.getRescaling().setParameters(txtParameters.getText());
            cbRescalingFocusGained(null);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SetupSolver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SetupSolver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SetupSolver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SetupSolver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new SetupSolver().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAcceptSolver4;
    private javax.swing.JComboBox cbMutation;
    private javax.swing.JComboBox cbProblem;
    private javax.swing.JComboBox cbRecombination;
    private javax.swing.JComboBox cbReparation;
    private javax.swing.JComboBox cbReplacement;
    private javax.swing.JComboBox cbRescaling;
    private javax.swing.JComboBox cbSelection;
    private javax.swing.JComboBox cbSolverType;
    private javax.swing.JComboBox cbStopCriteria;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblMutation;
    private javax.swing.JLabel lblProblem;
    private javax.swing.JLabel lblRecombination;
    private javax.swing.JLabel lblReparation;
    private javax.swing.JLabel lblReplacement;
    private javax.swing.JLabel lblRescaling;
    private javax.swing.JLabel lblSelection;
    private javax.swing.JPanel pnInformation;
    private javax.swing.JPanel pnSetupOperators;
    private javax.swing.JPanel pnSetupSolver;
    private javax.swing.JPanel pnStatisticsSelections;
    private javax.swing.JPanel pnStats;
    private javax.swing.JRadioButton rbMultiPop;
    private javax.swing.JRadioButton rbSimplePop;
    private javax.swing.JRadioButton rbUniquePop;
    private javax.swing.ButtonGroup rgPopType;
    private javax.swing.JTextArea txtInfo;
    private javax.swing.JTextField txtParameters;
    private javax.swing.JTextField txtPopSize;
    private javax.swing.JTextArea txtSolverInfo;
    private javax.swing.JTextArea txtSolverInformation;
    private javax.swing.JTextField txtSolverName;
    private javax.swing.JTextField txtSolverParameters;
    private javax.swing.JTextArea txtStopCriteriaInfo;
    private javax.swing.JTextField txtStopCriteriaParams;
    // End of variables declaration//GEN-END:variables
}
